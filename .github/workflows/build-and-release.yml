name: build-and-release
run-name: Testing and Releasing Rives barebones with Doom
on: [push, workflow_dispatch]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: Main

    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Cartesapp
        run: |
          pip3 install cartesapp[dev]@git+https://github.com/prototyp3-dev/cartesapp@v1.1.0

      - name: Build with Cartesapp
        run: |
          cartesapp build --log-level debug

      - name: Flash Drives sha256sum
        run: |
          sha256sum .cartesi/app.sqfs
          sha256sum .cartesi/merkle.ext2
          sha256sum .cartesi/root.ext2

      - name: Test 1st time
        run: |
          cartesapp test --cartesi-machine --log-level debug

      - name: 2nd Test random order
        run: |
          pip3 install pytest-randomly
          cartesapp test --cartesi-machine --log-level debug

      - name: Create artifact archive
        run: |
          cd .cartesi/image && tar -czf ../../rives-barebones-doom-snapshot.tar.gz * && cd ../..
          sha256sum rives-barebones-doom-snapshot.tar.gz > rives-barebones-doom-snapshot.tar.gz.sha256

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rives-barebones-doom-snapshot
          path: |
            rives-barebones-doom-snapshot.tar.gz
            rives-barebones-doom-snapshot.tar.gz.sha256
          retention-days: 2

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts -name "*.sha256" -exec cp {} release-assets/ \;
          ls -la release-assets/

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          files: release-assets/*
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
